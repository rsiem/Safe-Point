@model SafePoint.Models.Hospital

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div class="row">
    <div class="col-xs-12 visible-xs">
        <p>this is only a test</p>
    </div>
    <div class="col-lg-8 col-md-8 col-sm-8 col-xs-12">
        <div>
            <h4>Hospital</h4>
            <hr />
            <dl class="dl-horizontal" id="hospitals">
                <dt hidden>
                    @Html.DisplayNameFor(model => model.HospId)
                </dt>
                <dd hidden class="hospid">
                    @Html.DisplayFor(model => model.HospId)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.HospName)
                </dt>
                <dd class="hospname">
                    @Html.DisplayFor(model => model.HospName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.HospType)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.HospType)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.LGA)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.LGA)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ServiceName)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ServiceName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.PhoneNum)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.PhoneNum)
                </dd>

                <dt>
                    Address
                </dt>
                <dd>
                    <address id="address">
                        @Html.DisplayFor(model => model.StreetNum)

                        @Html.DisplayFor(model => model.RoadName)

                        @Html.DisplayFor(model => model.RoadSuffix)

                        @Html.DisplayFor(model => model.RoadType)
                    </address>

                    <state id="state">
                        @Html.DisplayFor(model => model.State)
                    </state>

                    <postcode id="postcode">
                        @Html.DisplayFor(model => model.PostalCode)
                    </postcode>
                </dd>

            </dl>
        </div>

        <p>
            Select Date/Time:
        </p>
        <div class="input-group date col-md-5">
            <div>
                <input id="datetime" type="text" class="form-control" readonly>
            </div>
            <div class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </div>
        </div>
        <p></p>
        <p id="afterpick"></p>
    </div>

    <div class="col-lg-4 col-md-4 col-sm-4 visible-lg visible-md visible-sm">
        <h4>Test</h4>
        <hr />
        <p>this will show the current reservation made</p>
    </div>
</div>

<p class="address"></p>
<p class="postcode"></p>
<p class="state"></p>
<p id="location"></p>

<p>
    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.HospId })
        <span> | </span>
        @Html.ActionLink("Back to List", "Index")
    }
</p>

@section Scripts {

    @Scripts.Render("~/bundles/datetimepicker")
    
    <script type="text/javascript">
        var address = "\"" + $.trim($("#address").text()) + "\"";
        var postcode = "\"" + $.trim($("#postcode").text()) + "\"";
        var state = "\"" + $.trim($("#state").text()) + "\"";

        $(".address").html(address);
        $(".postcode").html(postcode);
        $(".state").html(state);

        var geocoder = new Geocoder.GeocodeService();

        // geocode the location of the White House
        var location = geocoder.GeocodeLocation(address + " " + state + " " + postcode);

        $("#location").html("Location: Latitude: " + location.Latitude.ToString() + "; Longitude: " + location.Longitude.ToString());
        //$.ajax({
        //    url: "https://mappify.io/api/rpc/address/geocode/",
        //    type: 'POST',
        //    dataType: 'json',
        //    contentType: 'application/json',
        //    data: { "streetAddress": address, "postCode": postcode, "state": state },
        //    success: function (data) {
        //        alert(JSON.stringify(data));
        //    },
        //    error: function () {
        //        alert("Cannot get data");
        //    }
        //});
    </script>
}